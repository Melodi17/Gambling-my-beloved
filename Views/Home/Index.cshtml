@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Home Page";
    ApplicationUser? currentUser = await UserManager.GetUserAsync(User);
}


<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    @if (SignInManager.IsSignedIn(User))
    {
        <p>You have @currentUser!.Balance.ToString("C")</p>
    }

    @* show the last 10 StockEvents in cards *@

    <h2>Recent Stock Events</h2>
    <div class="row">
        @foreach (var item in ((IEnumerable<StockEvent>)ViewData["StockEvents"])!
            .Zip((IEnumerable<Stock[]>)ViewData["EffectedStocks"]!,
                (stockEvent, stocks) => new { StockEvent = stockEvent, Stocks = stocks }))
        {
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@item.StockEvent.Description</h5>
                        <p class="card-text">@item.StockEvent.Date</p>
                        
                        @foreach (Stock stock in item.Stocks)
                        {
                            decimal price = stock.GetHistoricalPrice(item.StockEvent.Date);
                            decimal priceChange = stock.GetPriceChange(item.StockEvent.Date);
                            <p class="card-text">
                                <a asp-controller="Stocks" asp-action="Details" asp-route-id="@stock.Id">
                                    @stock.Symbol
                                </a>: @Html.DisplayFor(modelItem => price)
                                (@Html.DisplayFor(modelItem => priceChange, "PriceChange"))
                            </p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>