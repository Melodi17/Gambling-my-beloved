@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Home Page";
    ApplicationUser? currentUser = ViewData["User"] as ApplicationUser;
}


<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    @if (SignInManager.IsSignedIn(User))
    {
        decimal profitPercentage = currentUser.GetTotalProfitPercentage();
        
        <p>You have @currentUser!.Balance.ToString("C")</p>
                                                       
        <h2>Portfolio</h2>
        
        <div class="row">
            <div class="col-lg-5 col-12">
                <dl class="row">
                    <dt class="col-5">
                        @Html.DisplayNameFor(model => currentUser.Balance)
                    </dt>
                    <dd class="col-5">
                        @Html.DisplayFor(model => currentUser.Balance)
                    </dd>
                    <dt class="col-5">
                        Total Investment
                    </dt>
                    <dd class="col-5">
                        @currentUser.GetTotalInvestment().ToString("C")
                    </dd>
                    <dt class="col-5">
                        Total Value
                    </dt>
                    <dd class="col-5">
                        @currentUser.GetTotalValue().ToString("C")
                    </dd>
                    <dt class="col-5">
                        Total Profit
                    </dt>
                    <dd class="col-5">
                        @currentUser.GetTotalProfit().ToString("C") (@Html.DisplayFor(model => profitPercentage, "PriceChange"))
                    </dd>
                </dl>
            </div>
        </div>
        
        <div class="row">
            @foreach (Stock stock in currentUser.GetOwnedStocks())
            {
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">
                                <a asp-controller="Stocks" asp-action="Details" asp-route-id="@stock.Id">
                                    @stock.Symbol
                                </a>
                            </h5>
                            <div class="card-text">
                                <dl class="row">
                                    <dt class="col-sm-5">
                                        @Html.DisplayNameFor(model => stock.Symbol)
                                    </dt>
                                    <dd class="col-sm-5">
                                        @Html.DisplayFor(model => stock.Symbol)
                                    </dd>
                                    <dt class="col-sm-5">
                                        @Html.DisplayNameFor(model => stock.UnitPrice)
                                    </dt>
                                    <dd class="col-sm-5">
                                        @Html.DisplayFor(model => stock.UnitPrice)
                                    </dd>
                                    <dt class="col-sm-5">
                                        @Html.DisplayNameFor(model => stock.PriceChange)
                                    </dt>
                                    <dd class="col-sm-5">
                                        @Html.DisplayFor(model => stock.PriceChange, "PriceChange")
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <h2>Recent Stock Events</h2>
    <div class="row">
        @foreach (var item in ((IEnumerable<StockEvent>)ViewData["StockEvents"])!
            .Zip((IEnumerable<Stock[]>)ViewData["EffectedStocks"]!,
                (stockEvent, stocks) => new { StockEvent = stockEvent, Stocks = stocks }))
        {
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@item.StockEvent.Description</h5>
                        <p class="card-text">@item.StockEvent.Date</p>
                        
                        @foreach (Stock stock in item.Stocks)
                        {
                            decimal price = stock.GetHistoricalPrice(item.StockEvent.Date);
                            decimal priceChange = stock.GetPriceChangePercent(item.StockEvent.Date);
                            <p class="card-text">
                                <a asp-controller="Stocks" asp-action="Details" asp-route-id="@stock.Id">
                                    @stock.Symbol
                                </a>: @Html.DisplayFor(modelItem => price)
                                (@Html.DisplayFor(modelItem => priceChange, "PriceChange"))
                            </p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>