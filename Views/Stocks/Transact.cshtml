@using Microsoft.AspNetCore.Identity
@model Transaction
@inject UserManager<ApplicationUser> UserManager

@{
    bool success = (bool)ViewData["Success"];
    string message = (string)ViewData["Message"];

    StockOwnership stockOwnership = Model.StockOwnership;
    Stock stock = stockOwnership.Stock;

    ApplicationUser currentUser = await UserManager.GetUserAsync(User);
    string phrase = (success, Model.Type) switch {
        (true, TransactionType.Buy) => "Bought",
        (true, TransactionType.Sell) => "Sold",
        
        (false, TransactionType.Buy) => "Failed to buy",
        (false, TransactionType.Sell) => "Failed to sell",
        
        _ => throw new ArgumentOutOfRangeException()
    };
}


<div class="alert @(success ? "alert-success" : "alert-danger") alert-dismissible fade show" role="alert">
    <h4 class="alert-heading">
        @phrase
        @Model.Quantity.ToString("N0") share(s) of @stock.Symbol at @stock.UnitPrice.ToCurrency()/share
    </h4>
    <p>@message</p>

    @if (success)
    {
        <hr/>
        <span class="text-secondary">@Model.Date.ToString("yyyy-MM-dd HH:mm:ss")</span>
    }
</div>

<hr/>

<a asp-controller="Stocks" asp-action="Details" asp-route-id="@stock.Id" class="btn btn-primary">Back to Stock</a>